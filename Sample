Shader "Custom/Sample"
{
	Properties
	{
		_Texture("Texture", 2D) = "white" {}
		_Color("Color", Color) = (1,1,1,1)
	}

	SubShader
	{
		Tags{ "Queue" = "Geometry" "RenderType" = "Opaque"}
		LOD 100

		Pass
		{
			CGPROGRAM

			#pragma vertex vert
			#pragma fragment frag

			sampler2D _Texture;
			fixed4 _Color; // fixed 就是精度底的浮点-11bit

			// 从应用读取参数
			struct appdata {
				fixed4 vertex : POSITIONT; // POSITION语义-变量含义
				fixed2 uv : TEXCOORD0;
			};

			// 输出数据结构
			struct v2f {
				fixed4 vertex : SV_Position;
				fixed2 uv : TEXCOORD0;
			};

			// 定义方法
			v2f vert(appdata i)
			{
				v2f o;
				o.uv = i.uv;
				// 顶点坐标乘以投影矩阵
				o.vertex = mul(UNITY_MATRIX_MVP, i.vertex);

				return o;
			}

			fixed4 frag(v2f v) ： SV_Target
			{
				return tex2D(_Texture, v.uv) * _Color;
			}

			ENDCG
		}
	}
}
